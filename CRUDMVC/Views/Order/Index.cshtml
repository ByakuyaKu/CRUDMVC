@model CRUDMVC.Models.ViewModels.OrderIndexViewModel
@*@model PagedList<Order>*@
@using X.PagedList.Mvc
@using X.PagedList
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Home";
}

<div class="row mt-4">
    <div class="col-8">
        <h1>Orders</h1>
    </div>
    <div class="col-4 text-end mt-3">

        <form id="form" asp-action="IndexFilterDate" method="post"
              asp-route-currentProviderIdFilter="@ViewData["CurrentProviderIdFilter"]"
              asp-route-currentProviderNameFilter="@ViewData["CurrentProviderNameFilter"]"
              asp-route-currentOrderItemNameFilter="@ViewData["CurrentOrderItemNameFilter"]"
              asp-route-currentOrderItemUnitFilter="@ViewData["CurrentOrderItemUnitFilter"]">
            <div class="form-group">
                <label asp-for="DateFromFilter" class="control-label"> Date from</label>
                <input asp-for="DateFromFilter" class="form-control" />
                <span asp-validation-for="DateFromFilter" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateToFilter" class="control-label"> Date to</label>
                <input asp-for="DateToFilter" class="form-control" />
                <span asp-validation-for="DateToFilter" class="text-danger"></span>
            </div>
            <input type="submit" value="Filter by date" class="btn btn-primary mt-4" />
            <a asp-controller="Order" asp-action="Create" class="btn btn-primary mt-4"><i class="bi bi-plus-circle"></i>&nbsp Create order</a>
        </form>
    </div>

    @*<form class="d-flex"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    asp-route-currentDateToFilter="@ViewData["CurrentDateTo"]"
    asp-route-currentDateFromFilter="@ViewData["CurrentDateFrom"]">
    <input class="form-control me-sm-2" type="datetime-local" placeholder="Date from" name="dateFrom" value="@DateTime.Today.AddMonths(-1).ToString()">
    <input class="form-control me-sm-2" type="datetime-local" placeholder="Date to" name="dateTo" value="@DateTime.Today.ToString()">
    <button class="btn btn-secondary my-2 my-sm-0" type="submit">Filter by date</button>
    </form>*@

    <form class="d-flex" asp-action="Index"
          asp-route-currentDateToFilter="@ViewData["CurrentDateTo"]"
          asp-route-currentDateFromFilter="@ViewData["CurrentDateFrom"]"
          asp-route-currentProviderIdFilter="@ViewData["CurrentProviderIdFilter"]"
          asp-route-currentProviderNameFilter="@ViewData["CurrentProviderNameFilter"]"
          asp-route-currentOrderItemNameFilter="@ViewData["CurrentOrderItemNameFilter"]"
          asp-route-currentOrderItemUnitFilter="@ViewData["CurrentOrderItemUnitFilter"]"
          asp-route-currentNumberFilter="@ViewData["CurrentNumberFilter"]">

        <input class="form-control me-sm-2" type="number" placeholder="provider id" asp-for="@Model.ProviderIdFilter" >
        <input class="form-control me-sm-2" type="text" placeholder="provider name" asp-for="@Model.ProviderNameFilter" >

        <input class="form-control me-sm-2" type="text" placeholder="order item name" asp-for="@Model.OrderItemNameFilter" >
        <input class="form-control me-sm-2" type="text" placeholder="order item unit name" asp-for="@Model.OrderItemUnitFilter" >

        <button class="btn btn-secondary my-2 my-sm-0" type="submit">Filter orders</button>
    </form>
</div>
<hr class="mt-4" />

@if (TempData["success"] != null)
{
    <div class="alert alert-dismissible alert-success mt-4">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <strong>@TempData["success"]</strong>
    </div>
}

@if (TempData["error"] != null)
{
    <div class="alert alert-dismissible alert-danger mt-4">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <strong>@TempData["error"]</strong>
    </div>
}

<div class="row justify-content-md-center">
    @if (Model.Orders == null || Model.Orders?.Count() == 0)
    {
        <div class="mt-4">No Orders</div>
    }
    else
    {
        @foreach (var order in Model.Orders)
        {
            <div class="card  col-3 p-0 m-4">
                <a class="text-decoration-none text-white" asp-controller="Order" asp-action="Details" asp-route-id="@order.Id">
                    <h3 class="card-header">@order.Number</h3>
                    <div class="card-body">
                        <h6 class="card-subtitle text-muted">Id @(order.Id)</h6>
                    </div>
                    <ul class="list-group list-group-flush">

                        <li class="list-group-item">Date: @order.Date</li>

                        @if (order.Provider != null)
                        {
                            <li class="list-group-item">Provider: @order.Provider.Name</li>
                        }
                        else
                        {
                            <li class="list-group-item">Provider: unknown</li>
                        }

                    </ul>
                    <div class="card-body">
                        <a asp-controller="Order" asp-action="Edit" asp-route-id="@order.Id" class="btn btn-secondary "><i class="bi bi-pencil-square"></i> &nbsp Edit</a>
                        <a asp-controller="Order" asp-action="Delete" asp-route-id="@order.Id" class="btn btn-secondary "><i class="bi bi-trash"></i> &nbsp Delete</a>
                    </div>
                    <div class="card-footer text-muted">
                        <p class="card-text">Year @((order.Date.ToString("yyyy")))</p>
                    </div>
                </a>
            </div>
        }
    }
</div>

<div>
    @if (Model.Orders != null && Model.Orders.Count > 0)
    {
        <ul class="pagination pagination-sm">
            @if (Model.Orders.IsFirstPage)
            {
                <li class="page-item disabled">
                    <a class="page-link">&laquo;</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index"
               asp-route-page="@(Model.Orders.PageNumber - 1)"
               asp-route-currentDateToFilter="@ViewData["CurrentDateTo"]"
               asp-route-currentDateFromFilter="@ViewData["CurrentDateFrom"]"
               asp-route-currentProviderIdFilter="@ViewData["CurrentProviderIdFilter"]"
               asp-route-currentProviderNameFilter="@ViewData["CurrentProviderNameFilter"]"
               asp-route-currentOrderItemNameFilter="@ViewData["CurrentOrderItemNameFilter"]"
               asp-route-currentOrderItemUnitFilter="@ViewData["CurrentOrderItemUnitFilter"]"
               asp-route-currentNumberFilter="@ViewData["CurrentNumberFilter"]">&laquo;</a>
                </li>
            }

            <li class="page-item">
                <a class="page-link">@Model.Orders.PageNumber</a>
            </li>
            @if (Model.Orders.IsLastPage)
            {
                <li class="page-item disabled">
                    <a class="page-link">&raquo;</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index"
               asp-route-page="@(Model.Orders.PageNumber + 1)"
               asp-route-currentDateToFilter="@ViewData["CurrentDateTo"]"
               asp-route-currentDateFromFilter="@ViewData["CurrentDateFrom"]"
               asp-route-currentProviderIdFilter="@ViewData["CurrentProviderIdFilter"]"
               asp-route-currentProviderNameFilter="@ViewData["CurrentProviderNameFilter"]"
               asp-route-currentOrderItemNameFilter="@ViewData["CurrentOrderItemNameFilter"]"
               asp-route-currentOrderItemUnitFilter="@ViewData["CurrentOrderItemUnitFilter"]"
               asp-route-currentNumberFilter="@ViewData["CurrentNumberFilter"]">&raquo;</a>
                </li>
            }
        </ul>
    }
</div>

